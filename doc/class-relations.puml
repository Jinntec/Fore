@startuml

class HTMLElement{
}
class LitElement

class FxForm {
    refresh()
}
LitElement <|-- FxForm


class ForeElementMixin{
    getModel()
    evalInContext()
    getModelItem()
    isNotBound()
    isBound()
    getBindingExpr()
    _getParentBindingElement()
    getInScopeContext()
}
package "model" #DDDDDD {
    class FxModel{
        bindingMap[]
        rebuild()
        recalculate()
        revalidate()
        registerBinding()
    }
    class FxInstance{
        getInstanceData()
        getDefaultContext()
    }

    class ModelItem{
        node
        getValue
        setValue
        readonly
        required
        relevant
        valid
        type
    }

    class FxBind{
        createModelItem()
        buildBindGraph()
    }
    class FxSubmission

    HTMLElement <|-- FxInstance
    HTMLElement <|-- FxBind
    HTMLElement <|-- FxModel


}

FxModel o-- ModelItem

package "view" #DDDDDD{
    abstract class FxContainer{
        refresh()
    }
    abstract class AbstractControl{
        getValue()
        refresh()
    }
    class XfSwitch #lightgrey
    class XfSelect1 #lightgrey
    class XfSelect #lightgrey
    AbstractControl <|-- FxInput
    AbstractControl <|-- FxOutput
    AbstractControl <|-- FxButton
    FxContainer <|-- FxRepeat
    FxContainer <|-- FxRepeatitem
    FxContainer <|-- FxGroup
    FxContainer <|-- XfSwitch
    AbstractControl <|-- XfSelect
    AbstractControl <|-- XfSelect1
}

package "controller" #DDDDDD{
    class FxAction{
        needsRebuild
        needsRecalculate
        needsRevalidate
        needsRefresh
        execute()
        actionPerformed()
    }
    FxAction <|-- FxDelete
    FxAction <|-- FxAppend
    FxAction <|-- XfInsert
    FxAction <|-- FxSetvalue

}


LitElement <|-- FxContainer
LitElement <|-- AbstractControl
ForeElementMixin *.. AbstractControl
ForeElementMixin *.. FxContainer


HTMLElement <|-- FxAction
ForeElementMixin *.. FxAction




@enduml
