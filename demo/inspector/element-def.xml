<?xml version="1.0" encoding="UTF-8"?>
<elements version="1.0.0">
    <element>
        <attributes>
            <attribute>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
                <default>perform</default>
            </attribute>
            <attribute>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
                <default></default>
            </attribute>
            <attribute>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
                <default></default>
            </attribute>
            <attribute>
                <name>handler</name>
                <description></description>
                <type>object</type>
                <default></default>
            </attribute>
            <attribute>
                <description>boolean XPath
                    expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
                <default></default>
            </attribute>
            <attribute>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
                <default></default>
            </attribute>
            <attribute>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
                <default></default>
            </attribute>
            <attribute>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
                <default></default>
            </attribute>
            <attribute>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
                <default></default>
            </attribute>
            <attribute>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
                <default></default>
            </attribute>
        </attributes>
        <description>`fx-action`
            an action to wrap other actions and defers the update cycle until the end of the block.
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-action</name>
        <path>./src/actions/fx-action.js</path>
        <properties>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <name>clear</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the repeat this action is appending to.</description>
                <name>repeat</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <attribute>model</attribute>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <deprecated>true</deprecated>
        <deprecatedMessage>will be replaced with `fx-insert`</deprecatedMessage>
        <description>`fx-append` appends an entry to a repeat.</description>
        <events>
            <event>
                <description>fired after new item is appended</description>
                <name>index-changed</name>
            </event>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-append</name>
        <path>./src/actions/fx-append.js</path>
        <properties>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-confirm`
            Displays a simple confirmation before actually executing the nested actions.
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-confirm</name>
        <path>./src/actions/fx-confirm.js</path>
        <properties>
            <property>
                <attribute>detail</attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default/>
                <description></description>
                <name>to</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
        </attributes>
        <description>`fx-copy`
            todo: demo + tests
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-copy</name>
        <path>./src/actions/fx-copy.js</path>
        <properties>
            <property>
                <attribute>detail</attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <default/>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-delete`
            deletes nodes from instance data.
        </description>
        <events>
            <event>
                <description>event</description>
                <name>deleted</name>
            </event>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-delete</name>
        <path>./src/actions/fx-delete.js</path>
        <properties>
            <property>
                <attribute>detail</attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <attribute>model</attribute>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-dispatch`

            dispatches an event with optional details.

            Properties given by `fx-property` child elements are stored to the events' details object and
            can be accessed in usual JavaScript way.
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-dispatch</name>
        <path>./src/actions/fx-dispatch.js</path>
        <properties>
            <property>
                <attribute>detail</attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-hide`
            hides a dialog
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-hide</name>
        <path>./src/actions/fx-hide.js</path>
        <properties>
            <property>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </property>
            <property>
                <default></default>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <default></default>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-insert`
            inserts nodes into data instances
        </description>
        <events>
            <event>
                <name>index-changed</name>
            </event>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-insert</name>
        <path>./src/actions/fx-insert.js</path>
        <properties>
            <property>
                <attribute>detail</attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description></description>
                <name>attachTo</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>url</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-message`

            Action to display messages to the user.
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-load</name>
        <path>./src/actions/fx-load.js</path>
        <properties>
            <property>
                <attribute>detail</attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-message`

            Action to display messages to the user.
        </description>
        <events>
            <event>
                <name>message</name>
            </event>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-message</name>
        <path>./src/actions/fx-message.js</path>
        <properties>
            <property>
                <attribute>detail</attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-refresh`

            Calls refresh() on fx-form
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-refresh</name>
        <path>./src/actions/fx-refresh.js</path>
        <properties>
            <property>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </property>
            <property>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </property>
            <property>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </property>
            <property>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </property>
            <property>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </property>
            <property>
                <default></default>
                <description>The observer if given is the property on which an event is triggered. It must be an
                    ancestor of the target
                    property of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </property>
            <property>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </property>
            <property>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </property>
            <property>
                <default></default>
                <description>id of target property to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </property>
            <property>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </property>
            <property>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <default></default>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-reload`
            reloads browser window when receiving 'reload' event
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-reload</name>
        <path>./src/actions/fx-reload.js</path>
        <properties>
            <property>
                <name>outermostHandler</name>
            </property>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </property>
            <property>
                <attribute>delay</attribute>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </property>
            <property>
                <attribute>event</attribute>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </property>
            <property>
                <attribute>handler</attribute>
                <name>handler</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ifExpr</attribute>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>observer</attribute>
                <description>The observer if given is the property on which an event is triggered. It must be an
                    ancestor of the target
                    property of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </property>
            <property>
                <attribute>phase</attribute>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </property>
            <property>
                <attribute>propagate</attribute>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </property>
            <property>
                <attribute>target</attribute>
                <description>id of target property to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </property>
            <property>
                <attribute>whileExpr</attribute>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description></description>
                <name>replaceNode</name>
                <type></type>
            </attribute>
            <attribute>
                <default/>
                <description></description>
                <name>with</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-replace` - replaces the node referred to with 'ref' with node referred to with 'with'
            attribute.
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-replace</name>
        <path>./src/actions/fx-replace.js</path>
        <properties>
            <property>
                <attribute>replaceNode</attribute>
                <name>replaceNode</name>
            </property>
            <property>
                <attribute>with</attribute>
                <default/>
                <name>with</name>
                <type>string</type>
            </property>
            <property>
                <name>outermostHandler</name>
            </property>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>defaultAction</attribute>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </property>
            <property>
                <attribute>delay</attribute>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </property>
            <property>
                <attribute>event</attribute>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </property>
            <property>
                <attribute>handler</attribute>
                <name>handler</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ifExpr</attribute>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>observer</attribute>
                <description>The observer if given is the property on which an event is triggered. It must be an
                    ancestor of the target
                    property of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </property>
            <property>
                <attribute>phase</attribute>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </property>
            <property>
                <attribute>propagate</attribute>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </property>
            <property>
                <attribute>target</attribute>
                <description>id of target property to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </property>
            <property>
                <attribute>whileExpr</attribute>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-return`
            returns data from a nested Fore to it's host Fore.

            behaves like a `&lt;fx-submission @replace='instance' with `targetref` and respects relevance processing.

            `targetref` will be the `ref` of the host control.

            todo: deos not relevant selection yet
        </description>
        <events>
            <event>
                <name>return</name>
            </event>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-return</name>
        <path>./src/actions/fx-return.js</path>
        <properties>
            <property>
                <name>outermostHandler</name>
            </property>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>defaultAction</attribute>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </property>
            <property>
                <attribute>delay</attribute>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </property>
            <property>
                <attribute>event</attribute>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </property>
            <property>
                <attribute>handler</attribute>
                <name>handler</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ifExpr</attribute>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>observer</attribute>
                <description>The observer if given is the property on which an event is triggered. It must be an
                    ancestor of the target
                    property of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </property>
            <property>
                <attribute>phase</attribute>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </property>
            <property>
                <attribute>propagate</attribute>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </property>
            <property>
                <attribute>target</attribute>
                <description>id of target property to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </property>
            <property>
                <attribute>whileExpr</attribute>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-send` - finds and activates a `fx-submission` element.

            extension idea: allow params to be passed as with dispatch action which can be used to set properties on
            submission attributes
        </description>
        <events>
            <event>
                <name>error</name>
            </event>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-send</name>
        <path>./src/actions/fx-send.js</path>
        <properties>
            <property>
                <default/>
                <name>value</name>
                <type>string</type>
            </property>
            <property>
                <name>outermostHandler</name>
            </property>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>defaultAction</attribute>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </property>
            <property>
                <attribute>delay</attribute>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </property>
            <property>
                <attribute>event</attribute>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </property>
            <property>
                <attribute>handler</attribute>
                <name>handler</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ifExpr</attribute>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>observer</attribute>
                <description>The observer if given is the property on which an event is triggered. It must be an
                    ancestor of the target
                    property of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </property>
            <property>
                <attribute>phase</attribute>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </property>
            <property>
                <attribute>propagate</attribute>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </property>
            <property>
                <attribute>target</attribute>
                <description>id of target property to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </property>
            <property>
                <attribute>whileExpr</attribute>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-setfocus`
            Set the focus to a target control optionally selecting eventual value in case a `select` attribute is given.
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-setfocus</name>
        <path>./src/actions/fx-setfocus.js</path>
        <properties>
            <property>
                <name>outermostHandler</name>
            </property>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>defaultAction</attribute>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </property>
            <property>
                <attribute>delay</attribute>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </property>
            <property>
                <attribute>event</attribute>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </property>
            <property>
                <attribute>handler</attribute>
                <name>handler</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ifExpr</attribute>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>observer</attribute>
                <description>The observer if given is the property on which an event is triggered. It must be an
                    ancestor of the target
                    property of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </property>
            <property>
                <attribute>phase</attribute>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </property>
            <property>
                <attribute>propagate</attribute>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </property>
            <property>
                <attribute>target</attribute>
                <description>id of target property to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </property>
            <property>
                <attribute>whileExpr</attribute>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default/>
                <description></description>
                <name>valueAttr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
        </attributes>
        <description>`fx-setvalue`</description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-setvalue</name>
        <path>./src/actions/fx-setvalue.js</path>
        <properties>
            <property>
                <attribute>valueAttr</attribute>
                <default/>
                <name>valueAttr</name>
                <type>string</type>
            </property>
            <property>
                <name>outermostHandler</name>
            </property>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </property>
            <property>
                <attribute>delay</attribute>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </property>
            <property>
                <attribute>event</attribute>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </property>
            <property>
                <attribute>handler</attribute>
                <name>handler</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ifExpr</attribute>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>observer</attribute>
                <description>The observer if given is the property on which an event is triggered. It must be an
                    ancestor of the target
                    property of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </property>
            <property>
                <attribute>phase</attribute>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </property>
            <property>
                <attribute>propagate</attribute>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </property>
            <property>
                <attribute>target</attribute>
                <description>id of target property to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </property>
            <property>
                <attribute>whileExpr</attribute>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <default/>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-confirm`
            Displays a simple confirmation before actually executing the nested actions.
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-show</name>
        <path>./src/actions/fx-show.js</path>
        <properties>
            <property>
                <name>outermostHandler</name>
            </property>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>defaultAction</attribute>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </property>
            <property>
                <attribute>delay</attribute>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </property>
            <property>
                <attribute>event</attribute>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </property>
            <property>
                <attribute>handler</attribute>
                <name>handler</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ifExpr</attribute>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>observer</attribute>
                <description>The observer if given is the property on which an event is triggered. It must be an
                    ancestor of the target
                    property of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </property>
            <property>
                <attribute>phase</attribute>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </property>
            <property>
                <attribute>propagate</attribute>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </property>
            <property>
                <attribute>target</attribute>
                <description>id of target property to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </property>
            <property>
                <attribute>whileExpr</attribute>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-toggle`</description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-toggle</name>
        <path>./src/actions/fx-toggle.js</path>
        <properties>
            <property>
                <name>outermostHandler</name>
            </property>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>defaultAction</attribute>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </property>
            <property>
                <attribute>delay</attribute>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </property>
            <property>
                <attribute>event</attribute>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </property>
            <property>
                <attribute>handler</attribute>
                <name>handler</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ifExpr</attribute>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>observer</attribute>
                <description>The observer if given is the property on which an event is triggered. It must be an
                    ancestor of the target
                    property of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </property>
            <property>
                <attribute>phase</attribute>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </property>
            <property>
                <attribute>propagate</attribute>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </property>
            <property>
                <attribute>target</attribute>
                <description>id of target property to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </property>
            <property>
                <attribute>whileExpr</attribute>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>perform</default>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>handler</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The observer if given is the attribute on which an event is triggered. It must be an
                    ancestor of the target
                    attribute of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>id of target attribute to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`fx-update`

            Calls updateModel() on fx-model which in turn will rebuild, recalculate and revalidate.
        </description>
        <events>
            <event>
                <description>is dispatched after each execution of an action.</description>
                <name>action-performed</name>
            </event>
        </events>
        <name>fx-update</name>
        <path>./src/actions/fx-update.js</path>
        <properties>
            <property>
                <name>outermostHandler</name>
            </property>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>defaultAction</attribute>
                <description>can be either 'cancel' or 'perform' (default)</description>
                <name>defaultAction</name>
                <type>string</type>
            </property>
            <property>
                <attribute>delay</attribute>
                <description>delay before executing action in milliseconds</description>
                <name>delay</name>
                <type>number</type>
            </property>
            <property>
                <attribute>event</attribute>
                <description>event to listen for</description>
                <name>event</name>
                <type>object</type>
            </property>
            <property>
                <attribute>handler</attribute>
                <name>handler</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ifExpr</attribute>
                <description>boolean XPath expression. If true the action will be executed.</description>
                <name>ifExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>observer</attribute>
                <description>The observer if given is the property on which an event is triggered. It must be an
                    ancestor of the target
                    property of an event.
                </description>
                <name>observer</name>
                <type>object</type>
            </property>
            <property>
                <attribute>phase</attribute>
                <description>can be either 'capture' or 'default' (default)</description>
                <name>phase</name>
                <type>string</type>
            </property>
            <property>
                <attribute>propagate</attribute>
                <description>can be either 'stop' or 'continue' (default)</description>
                <name>propagate</name>
                <type>string</type>
            </property>
            <property>
                <attribute>target</attribute>
                <description>id of target property to attach listener to</description>
                <name>target</name>
                <type>string</type>
            </property>
            <property>
                <attribute>whileExpr</attribute>
                <description>boolean XPath expression. If true loop will be executed. If an ifExpr is present this also
                    needs to be true
                    to actually run the action.
                </description>
                <name>whileExpr</name>
                <type>string</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>Allows to extend a form with local custom functions.

            `
        </description>
        <name>fx-function</name>
        <path>./src/functions/fx-function.js</path>
        <properties>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>[]</default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>never[]</type>
            </attribute>
            <attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <attribute>detail</attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <attribute>needsUpdate</attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <attribute>model</attribute>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>FxBind declaratively attaches constraints to nodes in the data (instances).

            It's major task is to create ModelItem Objects for each Node in the data their ref is pointing to.

            References and constraint attributes use XPath statements to point to the nodes they are attributing.

            Note: why is fx-bind not extending BoundElement? Though fx-bind has a 'ref' attr it is not bound in the
            sense of
            getting updates about changes of the bound nodes. Instead it acts as a factory for modelItems that are used
            by
            BoundElements to track their state.
        </description>
        <name>fx-bind</name>
        <path>./src/fx-bind.js</path>
        <properties>
            <property>
                <default>false</default>
                <name>READONLY_DEFAULT</name>
                <type>boolean</type>
            </property>
            <property>
                <default>false</default>
                <name>REQUIRED_DEFAULT</name>
                <type>boolean</type>
            </property>
            <property>
                <default>true</default>
                <name>RELEVANT_DEFAULT</name>
                <type>boolean</type>
            </property>
            <property>
                <default>true</default>
                <name>CONSTRAINT_DEFAULT</name>
                <type>boolean</type>
            </property>
            <property>
                <default>"xs:string"</default>
                <name>TYPE_DEFAULT</name>
                <type>string</type>
            </property>
            <property>
                <default>{}</default>
                <name>contextNode</name>
                <type>object</type>
            </property>
            <property>
                <default>false</default>
                <name>inited</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <default>[]</default>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>never[]</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <default>{}</default>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>Setting this marker attribute will refresh the UI in a lazy fashion just updating
                    attributes being
                    in viewport.

                    this feature is still experimental and should be used with caution and extra testing
                </description>
                <name>lazyRefresh</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description></description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description></description>
                <name>ready</name>
                <type>boolean</type>
            </attribute>
        </attributes>
        <description>Main class for Fore.Outermost container element for each Fore application.

            Root element for Fore. Kicks off initialization and displays messages.

            fx-fore is the outermost container for each form. A form can have exactly one model
            with arbitrary number of instances.

            Main responsibilities are initialization and updating of model and instances, update of UI (refresh) and
            global messaging.
        </description>
        <events>
            <event>
                <description>dispatched in case the dependency graph is circular</description>
                <name>compute-exception</name>
            </event>
            <event>
                <description>dispatched after a refresh() run</description>
                <name>refresh-done</name>
            </event>
            <event>
                <description>dispatched after Fore has fully been initialized</description>
                <name>ready</name>
            </event>
            <event>
                <description>dispatches error when template expression fails to evaluate</description>
                <name>error</name>
            </event>
        </events>
        <name>fx-fore</name>
        <path>./src/fx-fore.js</path>
        <properties>
            <property>
                <attribute>lazyRefresh</attribute>
                <description>Setting this marker attribute will refresh the UI in a lazy fashion just updating propertys
                    being
                    in viewport.

                    this feature is still experimental and should be used with caution and extra testing
                </description>
                <name>lazyRefresh</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>model</attribute>
                <default>{}</default>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ready</attribute>
                <default>false</default>
                <name>ready</name>
                <type>boolean</type>
            </property>
            <property>
                <name>storedTemplateExpressionByNode</name>
                <type>Map&lt;any, any&gt;</type>
            </property>
            <property>
                <default>[]</default>
                <name>toRefresh</name>
                <type>never[]</type>
            </property>
            <property>
                <default>true</default>
                <name>initialRun</name>
                <type>boolean</type>
            </property>
            <property>
                <default>false</default>
                <name>someInstanceDataStructureChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <default>false</default>
                <name>repeatsFromAttributesCreated</name>
                <type>boolean</type>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <name>fx-header</name>
        <path>./src/fx-header.js</path>
        <properties>
            <property>
                <name>name</name>
            </property>
            <property>
                <default></default>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <default></default>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <default></default>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <description>Container for data instances.

            Offers several ways of loading data from either inline content or via 'src' attribute which will use the
            fetch
            API to resolve data.
        </description>
        <events>
            <event>
                <name>instance-loaded</name>
            </event>
        </events>
        <name>fx-instance</name>
        <path>./src/fx-instance.js</path>
        <properties>
            <property>
                <default>"parentNode"</default>
                <name>model</name>
                <type>any &amp; any | any</type>
            </property>
        </properties>
    </element>
    <element>
        <events>
            <event>
                <name>model-construct-done</name>
            </event>
            <event>
                <name>recalculate-done</name>
            </event>
        </events>
        <name>fx-model</name>
        <path>./src/fx-model.js</path>
        <properties>
            <property>
                <default>false</default>
                <name>dataChanged</name>
                <type>boolean</type>
            </property>
            <property>
                <name>formproperty</name>
                <type>HTMLproperty | null</type>
            </property>
            <property>
                <default>[]</default>
                <name>instances</name>
                <type>never[]</type>
            </property>
            <property>
                <default>[]</default>
                <name>modelItems</name>
                <type>never[]</type>
            </property>
            <property>
                <default>{}</default>
                <name>defaultContext</name>
                <type>object</type>
            </property>
            <property>
                <default>[]</default>
                <name>changed</name>
                <type>never[]</type>
            </property>
            <property>
                <default>false</default>
                <name>inited</name>
                <type>boolean</type>
            </property>
            <property>
                <default>false</default>
                <name>modelConstructed</name>
                <type>boolean</type>
            </property>
            <property>
                <default>0</default>
                <name>computes</name>
                <type>number</type>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>todo: validate='false'</description>
        <name>fx-submission</name>
        <path>./src/fx-submission.js</path>
        <properties>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <name>fx-var</name>
        <path>./src/fx-var.js</path>
        <properties>
            <property>
                <default/>
                <name>name</name>
                <type>string</type>
            </property>
            <property>
                <default/>
                <name>valueQuery</name>
                <type>string</type>
            </property>
            <property>
                <name>value</name>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <description>`AbstractControl` -
            is a general base class for control elements.
        </description>
        <name>fx-abstract-control</name>
        <path>./src/ui/abstract-control.js</path>
        <properties>
            <property>
                <default/>
                <name>value</name>
                <type>string</type>
            </property>
            <property>
                <default>"display"</default>
                <name>display</name>
            </property>
            <property>
                <default>false</default>
                <name>required</name>
                <type>boolean</type>
            </property>
            <property>
                <default>false</default>
                <name>readonly</name>
                <type>boolean</type>
            </property>
            <property>
                <name>widget</name>
            </property>
            <property>
                <default>false</default>
                <name>visited</name>
                <type>boolean</type>
            </property>
            <property>
                <default>false</default>
                <name>force</name>
                <type>boolean</type>
            </property>
            <property>
                <default></default>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>detail - event detail object</description>
                <name>detail</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>false</default>
                <description>whether nor not an action needs to run the update cycle</description>
                <name>needsUpdate</name>
                <type>boolean</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the node(s) bound by this attribute</description>
                <name>nodeset</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default></default>
                <description>the model of this attribute</description>
                <name>model</name>
                <type>object</type>
            </attribute>
            <attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </attribute>
        </attributes>
        <name>fx-alert</name>
        <path>./src/ui/fx-alert.js</path>
        <properties>
            <property>
                <default/>
                <name>value</name>
                <type>string</type>
            </property>
            <property>
                <default>"display"</default>
                <name>display</name>
            </property>
            <property>
                <default>false</default>
                <name>required</name>
                <type>boolean</type>
            </property>
            <property>
                <default>false</default>
                <name>readonly</name>
                <type>boolean</type>
            </property>
            <property>
                <name>widget</name>
            </property>
            <property>
                <default>false</default>
                <name>visited</name>
                <type>boolean</type>
            </property>
            <property>
                <default>false</default>
                <name>force</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <description>`fx-case`
            a container allowing to switch between fx-case elements

            * todo: implement
        </description>
        <name>fx-case</name>
        <path>./src/ui/fx-case.js</path>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
        </attributes>
        <description>`fx-container` -
            is a general class for container elements.
        </description>
        <events>
            <event>
                <name>disabled</name>
            </event>
            <event>
                <name>enabled</name>
            </event>
        </events>
        <name>fx-container</name>
        <path>./src/ui/fx-container.js</path>
        <properties>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>with value 'node' passes bound content as node</description>
                <name>as</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The widget event triggering update of model</description>
                <name>update-event</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>The name of the widget property to bind to</description>
                <name>value-prop</name>
                <type>string</type>
            </attribute>
        </attributes>
        <description>`fx-control`
            a generic wrapper for controls
        </description>
        <events>
            <event>
                <name>error</name>
            </event>
            <event>
                <name>loaded</name>
            </event>
        </events>
        <name>fx-control</name>
        <path>./src/ui/fx-control.js</path>
        <properties>
            <property>
                <default>false</default>
                <name>required</name>
                <type>boolean</type>
            </property>
            <property>
                <default>false</default>
                <name>readonly</name>
                <type>boolean</type>
            </property>
            <property>
                <name>widget</name>
            </property>
            <property>
                <default>false</default>
                <name>visited</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <name>id</name>
            </attribute>
        </attributes>
        <name>fx-dialog</name>
        <path>./src/ui/fx-dialog.js</path>
        <properties/>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
        </attributes>
        <description>`fx-group`
            a container allowing to switch between fx-case elements


            * todo: implement
        </description>
        <events>
            <event>
                <name>disabled</name>
            </event>
            <event>
                <name>enabled</name>
            </event>
        </events>
        <name>fx-group</name>
        <path>./src/ui/fx-group.js</path>
        <properties>
            <property>
                <attribute>collapse</attribute>
                <default>false</default>
                <name>collapse</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
        </attributes>
        <name>fx-hint</name>
        <path>./src/ui/fx-hint.js</path>
        <properties>
            <property>
                <default/>
                <name>value</name>
                <type>string</type>
            </property>
            <property>
                <default>false</default>
                <name>required</name>
                <type>boolean</type>
            </property>
            <property>
                <default>false</default>
                <name>readonly</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <description>lists out all live instances in html 'details' and 'summary' elements.</description>
        <name>fx-inspector</name>
        <path>./src/ui/fx-inspector.js</path>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>valueAttr</name>
                <type>string</type>
            </attribute>
        </attributes>
        <description>FxItems provices a templated list over its bound nodes. It is not standalone but expects to be used
            within an fx-control element.
        </description>
        <events>
            <event>
                <name>error</name>
            </event>
            <event>
                <name>loaded</name>
            </event>
        </events>
        <name>fx-items</name>
        <path>./src/ui/fx-items.js</path>
        <properties>
            <property>
                <default/>
                <name>value</name>
                <type>string</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>mediatype</description>
                <name>mediatype</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default></default>
                <description></description>
                <name>valueAttr</name>
                <type></type>
            </attribute>
        </attributes>
        <description>todo: review placing of value. should probably work with value attribute and not allow slotted
            content.
        </description>
        <name>fx-output</name>
        <path>./src/ui/fx-output.js</path>
        <properties>
            <property>
                <default/>
                <name>value</name>
                <type>string</type>
            </property>
            <property>
                <name>widget</name>
            </property>
            <property>
                <default>false</default>
                <name>visited</name>
                <type>boolean</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default>false</default>
                <description></description>
                <name>focusOnCreate</name>
                <type>string</type>
            </attribute>
            <attribute>
                <default>1</default>
                <description></description>
                <name>index</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default>0</default>
                <description></description>
                <name>repeatSize</name>
                <type>number</type>
            </attribute>
            <attribute>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
        </attributes>
        <description>`fx-repeat`

            Repeats its template for each node in its' bound nodeset.

            Template is a standard HTML `&lt;template&gt;` element. Once instanciated the template
            is moved to the shadowDOM of the repeat for safe re-use.
        </description>
        <events>
            <event>
                <name>item-changed</name>
            </event>
            <event>
                <name>no-template-error</name>
            </event>
        </events>
        <name>fx-repeat-attributes</name>
        <path>./src/ui/fx-repeat-attributes.js</path>
        <properties>
            <property>
                <attribute>focusOnCreate</attribute>
                <default/>
                <name>focusOnCreate</name>
                <type>string</type>
            </property>
            <property>
                <attribute>repeatIndex</attribute>
                <default>1</default>
                <name>repeatIndex</name>
                <type>number</type>
            </property>
            <property>
                <attribute>index</attribute>
                <default>1</default>
                <name>index</name>
                <type>number</type>
            </property>
            <property>
                <attribute>repeatSize</attribute>
                <default>0</default>
                <name>repeatSize</name>
                <type>number</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <default>[]</default>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>array</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <element>
                <default/>
                <name>focusOnCreate</name>
                <type>string</type>
            </element>
            <element>
                <default/>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </element>
        </attributes>
        <description>`fx-repeat`

            Repeats its template for each node in its' bound nodeset.

            Template is a standard HTML `&lt;template&gt;` element. Once instanciated the template
            is moved to the shadowDOM of the repeat for safe re-use.
        </description>
        <events>
            <event>
                <name>no-template-error</name>
            </event>
        </events>
        <name>fx-repeat</name>
        <path>./src/ui/fx-repeat.js</path>
        <properties>
            <property>
                <default>1</default>
                <name>repeatIndex</name>
                <type>number</type>
            </property>
            <property>
                <default>1</default>
                <name>index</name>
                <type>number</type>
            </property>
            <property>
                <default>0</default>
                <description></description>
                <name>repeatSize</name>
                <type></type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <default>[]</default>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>array</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <default/>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes/>
        <description>`fx-repeat`
            an xformish form for eXist-db
        </description>
        <events>
            <event>
                <name>item-changed</name>
            </event>
        </events>
        <name>fx-repeatitem</name>
        <path>./src/ui/fx-repeatitem.js</path>
        <properties>
            <property>
                <default></default>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <default></default>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <attribute>ref</attribute>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
        </attributes>
        <description>`fx-switch`
            a container allowing to switch between fx-case elements
        </description>
        <events>
            <event>
                <name>disabled</name>
            </event>
            <event>
                <name>enabled</name>
            </event>
        </events>
        <name>fx-switch</name>
        <path>./src/ui/fx-switch.js</path>
        <properties>
            <property>
                <default>{}</default>
                <name>formerCase</name>
                <type>object</type>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
    <element>
        <attributes>
            <attribute>
                <default></default>
                <description>XPath binding expression pointing to bound node</description>
                <name>ref</name>
                <type>string</type>
            </attribute>
        </attributes>
        <name>fx-trigger</name>
        <path>./src/ui/fx-trigger.js</path>
        <properties>
            <property>
                <default/>
                <name>value</name>
                <type>string</type>
            </property>
            <property>
                <default>false</default>
                <name>readonly</name>
                <type>boolean</type>
            </property>
            <property>
                <name>widget</name>
            </property>
            <property>
                <attribute>nodeset</attribute>
                <description>the node(s) bound by this property</description>
                <name>nodeset</name>
                <type>object</type>
            </property>
            <property>
                <attribute>context</attribute>
                <description>context object for evaluation</description>
                <name>context</name>
                <type>object</type>
            </property>
            <property>
                <attribute>model</attribute>
                <description>the model of this property</description>
                <name>model</name>
                <type>object</type>
            </property>
            <property>
                <attribute>modelItem</attribute>
                <default>{}</default>
                <description>The modelitem object associated to the bound node holding the evaluated state.
                </description>
                <name>modelItem</name>
                <type>object</type>
            </property>
            <property>
                <attribute>inScopeVariables</attribute>
                <name>inScopeVariables</name>
            </property>
        </properties>
    </element>
</elements>
